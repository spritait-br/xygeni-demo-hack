# This is a basic workflow to help you get started with Actions 

name: Build Malware Filtered

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab sd
  workflow_dispatch:
    #inputs:
      #dep-name:
      #  description: 'Dep. Name'
      #  required: true
      #  default: 'octokit'
      #dep-version:
      #  description: 'Dep. Version'
      #  required: true
      #  default: '3.1.2'  

 
env:
  XY_USERNAME: ${{ secrets.XY_USERNAME_DEMO }}
  XY_PASSWORD: ${{ secrets.XY_PASSWORD_DEMO }}
  XY_URL: ${{ secrets.XY_URL_DEMO }}
  XY_TOKEN: ${{ secrets.XY_TOKEN_DEMO }}
  XY_PRJ_NAME: GitHub-${{ github.event.repository.name }}-Filtered
  PKG_NAME: ${{ github.event.inputs.dep-name }}
  PKG_VERSION: ${{ github.event.inputs.dep-version }}
  #PKG_MALWARE: ${{ github.event.inputs.dep-malware }}
  DEF_REPORT: "reportMEW.json"
  DEF_LANGUAGE: "javascript"


jobs:



           
  run_scanner:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:

      #- uses: actions/checkout@master
      #  name: Checking out octokit code
      #  with:
      #    repository: octokit/octokit.js
      #    ref: refs/heads/main
      #    path: octokit

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        name: Checking out repo code
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # Default: 1
          fetch-depth: '0'
          path: malicious_files


      - name: Copying malicious files  
        run: |
          echo "Copying malicious files !!!"
          cp -r ./malicious_files/detectors_filtered ./octokit

      # Runs a set of commands using the runners shell
      - name: Running Xygeni Scanner
        run: |
          set +e
          
          echo Downloading Xygeni Scanner ....
          curl -L https://get.xygeni.io/latest/scanner/install.sh | /bin/bash -s -- -u $XY_USERNAME -p $XY_PASSWORD -s $XY_URL -d ${GITHUB_WORKSPACE}/scanner 
          
          echo Executing Xygeni scan ....    
          ${GITHUB_WORKSPACE}/scanner/xygeni scan --never-fail --run="malware" -n ${{ env.XY_PRJ_NAME }} --dir ./malicious_files/detectors_filtered 

          
          

        env:
          GITHUB_PAT: ${{ secrets.GH_PAT }}
